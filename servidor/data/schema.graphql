type Cliente {
    id: ID
    nombre: String
    apellido: String
    empresa: String
    emails: [Email]
    edad: Int
    tipo: TipoCliente
    pedidos: [Pedido]
}
type Email {
    email: String
}

type Pedido {
    producto: String
    precio: Int
}

type Producto {
    id: ID
    nombre: String
    precio: Int
    stock: Int
}

""" Asigna la categoria del cliente """
enum TipoCliente {
    BASICO
    PREMIUM
}

type Query {
    getClientes(limite: Int, offset: Int): [Cliente]
    getCliente(id: ID) : Cliente
    totalClientes : String
}

input EmailInput {
    email: String
}

input PedidoInput {
    producto: String
    precio: Int
}

""" Campos para los clientes nuevos """
input ClienteInput {
    id: ID
    nombre: String!
    apellido: String!
    empresa: String!
    emails: [EmailInput!]!
    edad: Int!
    tipo: TipoCliente!
    pedidos: [PedidoInput]
}

""" Campos para los Productos nuevos """
input ProductoInput {
    id: ID
    nombre: String!
    precio: Int!
    stock: Int!
}

""" Mutation para crear nuevos Clientes """
type Mutation {
    #Nombre del Resolver, Input con Datos y Valor que Retorna
    """ Te permite Crear Nuevos Clientes """
    crearCliente(input: ClienteInput) : Cliente

    """ Te permite Actualizar Clientes """
    actualizarCliente(input: ClienteInput) : Cliente

    """ Te permite Eliminar un Cliente """
    eliminarCliente(id: ID!) : String

    """ Te permite Crear Productos """
    nuevoProducto(input: ProductoInput) : Producto
}